Problem :: 3191. Minimum Operations to Make Binary Array Elements Equal to One I
You are given a binary array nums.
You can do the following operation on the array any number of times (possibly zero):

Choose any 3 consecutive elements from the array and flip all of them.
Flipping an element means changing its value from 0 to 1, and from 1 to 0.

Return the minimum number of operations required to make all elements in nums equal to 1. If it is impossible, return -1.

Time Complexity :: O(N)
Space Complexity ::  O(1)

Code ::

#pragma gcc optimize("03")
auto init = [](){
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    return 'c';
}();
class Solution {
public:
    int minOperations(vector<int>& nums) {
        int cnt =0;
        for(int i=0 ; i<nums.size()-2 ; i++){
            if(nums[i]==0){
                for(int j= i ; j<i+3 ; j++){
                    nums[j] = nums[j]^1;
                }
                cnt++;
            }
        }
        for(int i=0 ; i<nums.size() ; i++)if(nums[i]==0)return -1;
        return cnt;
    }
};
